name: Release

on:
  release:
    types: [published]

env:
  APPLICATION_NAME: TemplatingConsole
  TARGET_FRAMEWORK: net8.0
  CHECKSUM_SUFFIX: _sha256_checksum.txt

jobs:
  release:
    strategy:
      matrix:
        kind: ['linux', 'windows', 'macOS']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: macOS
            os: macos-latest
            target: osx-x64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build (dotnet publish & tar.gz / zip)
        shell: bash
        run: |
          tag=$(git describe --tags --abbrev=0)
          runtime="${{ matrix.target }}"
          release_name="${{ env.APPLICATION_NAME }}-${tag}-${{ matrix.target }}"

          # Publish everything
          ./publish.sh ${runtime} ${{ env.TARGET_FRAMEWORK }} ${release_name}

          # Pack files
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            # Pack to zip for Windows
            7z a -tzip "${release_name}.zip" "./${release_name}/*"
          else
            tar czvf "${release_name}.tar.gz" "${release_name}"
          fi

          # Delete output directory
          rm -r "${release_name}"
  
      - name: Set SHA (non-window)
        if: matrix.kind == 'macOS' || matrix.kind == 'linux'
        run: |
          for filename in *.tar.gz; do
            shasum -a 256 ${filename} | awk '{printf $1}' > ${filename%.*.*}${{ env.CHECKSUM_SUFFIX }}
          done

      - name: Set SHA (window)
        if: matrix.kind == 'windows'
        run: |
          foreach ($filename in (Get-ChildItem "*.zip")) {
            $outname = [string]::Concat((Get-Item $filename).Basename, "${{ env.CHECKSUM_SUFFIX }}")
            (certutil -hashfile $filename SHA256 | findstr /V ":")> $outname
          }

      - name: Publish
        uses: softprops/action-gh-release@v2
        with:
          files: "${{ env.APPLICATION_NAME }}*"
        env:
          GITHUB_TOKEN: ${{ secrets.TEMPLATING_TOKEN }}